[tox]
; This tox configuration is based on the example provided
; by JÃ¼rgen Gmach:
; https://jugmac00.github.io/blog/combine-coverage-for-different-python-versions/
; Specify the environments to run - we run the required
; Python/Django version combinations and we'll store code
; coverage information for each (see testenv). Then we
; run the coverage env target to combine coverage info.
envlist = 
    coverage-clean
    py27
    py35
    py36
    py37
    py38
    py39
    py310
    coverage-report

[testenv]
; This is the general environment configuration for the
; Python/Django test runs.
deps =
        pytest
        pytest-django
        pytest-cov
        wheel;python_version=='3.5'
        httpretty==1.0.3;python_version>='3.5'
        httpretty==0.9.7;python_version=='2.7'
        mock>=3.0.0,<=3.0.5;python_version<='3.5'
        mock>=3.0.5;python_version>'3.5'
        paramiko

; Run coverage with the parallel option to produce
; coverage files that don't overwrite each other!
commands =
    {envbindir}/pytest --cov=django_drf_filepond --cov-append --cov-report=

[testenv:coverage-clean]
; This section provides the configuration for the clean
; environment which is used to clean any previous coverage
; output. This is based on the tox info in the pytest-cov docs
; https://pytest-cov.readthedocs.io/en/latest/tox.html

deps = coverage
skip_install = true
commands =
    coverage erase

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    coverage report -m

; pytest configuration is provided in pytest.ini
